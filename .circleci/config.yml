version: 2

jobs:
  build:
    docker:
      - image: jixone/rust-ci:master
    steps:
      - checkout
      - run: |
          cargo build --verbose --all --all-targets
          python3 .circleci/save_binaries.py
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - bins/*
            - tests/*

  test:
    docker:
      - image: jixone/rust-ci:master
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: kcov coverage --include-path=varisat/src /tmp/workspace/tests/varisat/varisat
      - run: bash <(curl -s https://codecov.io/bash)

  build_dev_docs:
    docker:
      - image: jixone/rust-ci:master
    steps:
      - checkout
      - run: |
          cargo +nightly doc --document-private-items --no-deps --all --exclude varisat-cli
          mkdir -p /tmp/workspace
          cp -r target/doc /tmp/workspace/dev_docs
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - dev_docs/*

  publish_dev_docs:
    docker:
      - image: jixone/rust-ci:master
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: bash .circleci/publish_dev_docs.sh /tmp/workspace/dev_docs git@github.com:jix/varisat.git

  build_static_linux:
    docker:
      - image: jixone/rust-ci:master
    steps:
      - checkout
      - run: |
          cargo build --target x86_64-unknown-linux-musl -p varisat-cli --release
      - store_artifacts:
          path: target/x86_64-unknown-linux-musl/release/varisat
          destination: varisat-linux

  build_static_windows:
    docker:
      - image: jixone/rust-ci:master
    steps:
      - checkout
      - run: |
          cargo build --target x86_64-pc-windows-gnu -p varisat-cli --release
      - store_artifacts:
          path: target/x86_64-pc-windows-gnu/release/varisat.exe
          destination: varisat-windows

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - test:
          requires: [build]
      - build_dev_docs
      - publish_dev_docs:
          requires: [build_dev_docs, test]
          filters:
            branches:
              only: master
      - build_static_linux
      - build_static_windows
